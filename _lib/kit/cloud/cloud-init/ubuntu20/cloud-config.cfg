#cloud-config

# https://cloudinit.readthedocs.io/en/0.7.8/topics/examples.html
# https://www.zetta.io/en/help/articles-tutorials/cloud-init-reference/
# https://gist.github.com/aw/40623531057636dd858a9bf0f67234e8
# https://docs.hetzner.com/cloud/servers/faq/
#	'#!/bin/bash'
# https://community.hetzner.com/tutorials/basic-cloud-config
# https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-bash-script



groups:
  - users
  - wireshark
  - cdrom
  - floppy
  - audio
  - dip
  - video
  - plugdev
  - netdev
  - bluetooth
  - lpadmin
  - scanner
  - disk
  - dialout
  - vboxusers
  - libvirt
  - docker



users:
  - default
  - name: user
    gecos: user
    sudo: ALL=(ALL) NOPASSWD:ALL
    primary_group: user
    groups: users, sudo, wheel, wireshark, cdrom, floppy, audio, dip, video, plugdev, netdev, bluetooth, lpadmin, scanner, disk, dialout, vboxusers, libvirt, docker
    lock_passwd: true
    shell: /bin/bash



timezone: US/Eastern
locale: en_US.UTF-8
locale_configfile: /etc/default/locale


swap:
    filename: /swapfile
    size: 1610612736


# Ubuntu 20.04   specific.
# If this fails, attempt comparable 'apt-get' command with resulting OS, then remove packages from the list that are not available.
#### NOTICE: Other than graphical desktop, 'ubiquitous_bash' would be expected to automatically install all packages during '_test', possibly more slowly.
package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - sudo
  - bc
  - uuid-runtime
  - nmap
  - autossh
  - socat
  - sshfs
  - tor
  - sockstat
  - tigervnc-viewer
  - x11vnc
  - tigervnc-standalone-server
  - vim
  - wmctrl
  - xprintidle
  - okular
  - libreoffice
  - xournal
  - kwrite
  - netcat-openbsd
  - iperf
  - axel
  - unionfs-fuse
  - samba
  - qemu
  - qemu-system-x86
  - qemu-system-arm
  - qemu-efi-arm
  - qemu-efi-aarch64
  - qemu-user-static
  - qemu-utils
  - binfmt-support
  - dosbox
  - debootstrap
  - xclip
  - xinput
  - gparted
  - emacs
  - xterm
  - mesa-utils
  - net-tools
  - wireless-tools
  - rfkill
  - live-boot
  - pigz
  - falkon
  - konqueror
  - xserver-xorg-video-all
  - qalc
  - mktorrent
  - curl
  - gdisk
  - kate
  - kde-config-tablet
  - kwrite
  - lz4
  - mawk
  - nano
  - nilfs-tools
  - octave
  - octave-arduino
  - octave-bart
  - octave-bim
  - octave-bsltl
  - octave-cgi
  - octave-common
  - octave-control:amd64
  - octave-data-smoothing
  - octave-dataframe
  - octave-dicom
  - octave-divand
  - octave-doctest
  - octave-econometrics
  - octave-financial
  - octave-fits
  - octave-fpl
  - octave-fuzzy-logic-toolkit
  - octave-ga
  - octave-gdf
  - octave-general:amd64
  - octave-geometry
  - octave-gsl:amd64
  - octave-image:amd64
  - octave-image-acquisition
  - octave-instrument-control
  - octave-interval:amd64
  - octave-io
  - octave-level-set:amd64
  - octave-linear-algebra
  - octave-lssa
  - octave-ltfat
  - octave-ltfat-common
  - octave-mapping
  - octave-miscellaneous:amd64
  - octave-missing-functions
  - octave-msh
  - octave-mvn
  - octave-nan
  - octave-ncarray
  - octave-netcdf
  - octave-nlopt:amd64
  - octave-nurbs
  - octave-octclip
  - octave-octproj
  - octave-openems
  - octave-optics
  - octave-optim:amd64
  - octave-optiminterp
  - octave-parallel
  - octave-psychtoolbox-3
  - octave-quaternion
  - octave-queueing
  - octave-secs1d
  - octave-secs2d
  - octave-secs3d
  - octave-signal
  - octave-sockets
  - octave-sparsersb
  - octave-specfun
  - octave-splines
  - octave-statistics
  - octave-stk
  - octave-strings:amd64
  - octave-struct:amd64
  - octave-tsa
  - octave-vibes
  - octave-vrml
  - octave-zenity
  - octave-zeromq
  - recoll
  - sed
  - texinfo
  - udftools
  - wondershaper
  - tasksel
  - sddm
  - kde-plasma-desktop








#hostname: hostname



ssh_pwauth: false

disable_root: false




bootcmd:
  - cloud-init-per once createMotd touch /etc/motd
  - cloud-init-per once preserveMotd cp -n /etc/motd /etc/motd.bak
  - cloud-init-per once appendMotd echo "WARNING! imminent! reboot! build in progress!" >> /etc/motd


# Ubuntu 20.04   specific.
runcmd:
  - localectl --no-convert set-x11-keymap us pc104
  - echo 'tasksel'
  - tasksel --new-install install "ubuntu-desktop" > /var/log/tasksel
  - [ mkdir, -p, "/etc/skel/.ssh" ]
  - cat "/root/.ssh/authorized_keys" >> /etc/skel/.ssh/authorized_keys
  - [ mkdir, -p, "/home/user/.ssh" ]
  - cat "/root/.ssh/authorized_keys" >> /home/user/.ssh/authorized_keys
  - [ wget, "https://raw.githubusercontent.com/mirage335/ubiquitous_bash/master/ubiquitous_bash.sh" ]
  - [ chmod, "755", "./ubiquitous_bash.sh" ]
  - [ sudo, -u, root, /root/ubiquitous_bash.sh, _wait_debianInstall ]
  - [ apt-get, -y, update ]
  - [ apt-get, -y, install, git, sudo ]
  - [ cp, ./ubiquitous_bash.sh, /root ]
  - [ chown, "root:root", /root/ubiquitous_bash.sh ]
  - [ chmod, "755", "/root/ubiquitous_bash.sh" ]
  - [ sudo, -u, root, /root/ubiquitous_bash.sh, _setupUbiquitous ]
  - [ rm, -f, /root/ubiquitous_bash.sh ]
  - [ cp, ./ubiquitous_bash.sh, /home/user ]
  - [ chown, "user:user", /home/user/ubiquitous_bash.sh ]
  - [ chmod, "755", "/home/user/ubiquitous_bash.sh" ]
  - [ sudo, -u, user, /home/user/ubiquitous_bash.sh, _setupUbiquitous ]
  - [ rm, -f, /home/user/ubiquitous_bash.sh ]
  - echo 'ubiquitous_bash _getMost_distribution'
  - sudo -u root INSTANCE_ID="$INSTANCE_ID" sh -c "cd ; /root/bin/ubiquitous_bash.sh _getMost_ubuntu20 2>&1"
  - echo 'ubiquitous_bash functions'
  - sudo -u root INSTANCE_ID="$INSTANCE_ID" sh -c "cd ; /root/bin/ubiquitous_bash.sh _test 2>&1" > /var/log/ubiquitous_bash-test
  - apt-get -y upgrade
  - mv -f /etc/motd.bak /etc/motd
  - uptime
  - wall 'build complete'
  - reboot




