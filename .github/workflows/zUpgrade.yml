
# ATTRIBUTION-AI: Some code here may have been generated by Github Copilot Chat, ChatGPT, or other LLM, etc. Usually, there will be a comment acknowledging this in files this file was derived from, or in previous versions of this file. Moreover, it is reasonable simply to state AI may have partially written some code in this file, and that any AI generated code is minimal, obvious, could not have been written any other way, deals solely with GitHub APIs, etc...
# Comments, unused code, etc, have unusually been kept minimal in this file, to distract less from understaning the flow of jobs, which is already somewhat more difficult to see plainly in YML scripting.

# WARNING: May be untested .

name: zUpgrade

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  actions: write
  checks: read
  contents: write
  deployments: read
  issues: none
  packages: read
  pull-requests: read
  repository-projects: read
  security-events: none
  statuses: read


on:
  #push:
  workflow_dispatch:
    inputs:
      devfast:
        type: boolean
        default: true
      skimfast:
        type: boolean
        default: true
      releaseLabel:
        required: false
        default: spring
        #default: internal
        type: choice
        options:
        - build
        - spring
        - internal
        - base
        - frozen
      #DISABLE_RELEASE:
        #type: boolean
        #default: false
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  #schedule:
    #- cron: ''

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  #group: ${{ github.workflow }}-${{ github.ref }}
  group: build-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build_ubcp:
    runs-on: ubuntu-latest
    #runs-on: 'ubuntu-22.04'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
      - name: mkdir _local
        shell: bash
        run: |
          mkdir -p ./_local
      - name: _getMinimal_cloud-special
        shell: bash
        timeout-minutes: 120
        run: |
          sudo -n apt-get update -y
          sudo -n apt-get -y install jq gh curl coreutils p7zip findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux openssl
          ./ubiquitous_bash.sh _here_opensslConfig_legacy | sudo -n tee /etc/ssl/openssl_legacy.cnf > /dev/null 2>&1
          if ! sudo -n grep 'openssl_legacy' /etc/ssl/openssl.cnf > /dev/null 2>&1
          then
              sudo -n cp -f /etc/ssl/openssl.cnf /etc/ssl/openssl.cnf.orig
              echo '


              .include = /etc/ssl/openssl_legacy.cnf

              ' | sudo -n cat /etc/ssl/openssl.cnf.orig - | sudo -n tee /etc/ssl/openssl.cnf > /dev/null 2>&1
          fi
          true
      
      - name: _test_hash_legacy
        shell: bash
        run: |
          if [[ -e "/etc/ssl/openssl_legacy.cnf" ]]
          then
              echo -n | env OPENSSL_CONF="/etc/ssl/openssl_legacy.cnf" openssl dgst -whirlpool -binary | xxd -p -c 256
              exit ${PIPESTATUS[0]}
          else
              echo -n | openssl dgst -whirlpool -binary | xxd -p -c 256
              exit ${PIPESTATUS[0]}
          fi
      


      - name: _build_fallback_upgrade-ubcp-fetch
        shell: bash
        timeout-minutes: 120
        run: |
          export releaseLabel=${{ inputs.releaseLabel }}
          [[ "$releaseLabel" == "" ]] && export releaseLabel=spring
          ./ubiquitous_bash.sh _bin-build_import _build_fallback_upgrade-ubcp-fetch "$releaseLabel"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: _build_fallback_upgrade-ubcp-extract
        shell: bash
        timeout-minutes: 120
        run: |
          ./ubiquitous_bash.sh _bin-build_import _build_fallback_upgrade-ubcp-extract
      - name: _build_fallback_upgrade-ubcp-upgrade-ubiquitous_bash
        shell: bash
        timeout-minutes: 120
        run: |
          export skimfast=${{ inputs.skimfast }}
          echo $skimfast
          export devfast=${{ inputs.devfast }}
          echo $devfast
          ./ubiquitous_bash.sh _bin-build_import _build_fallback_upgrade-ubcp-upgrade-ubiquitous_bash
      - name: _build_fallback_upgrade-ubcp-report-binReport
        shell: bash
        timeout-minutes: 120
        run: |
          ./ubiquitous_bash.sh _bin-build_import _build_fallback_upgrade-ubcp-report-binReport

      - name: scribe! info! github! upgrade
        shell: bash
        run: |
          ! echo ${{ github.repository }} | tee "_local/upgradeTmp/package_ubcp-core/ubcp/cygwin"/info-github-upgrade && exit 1
          ! echo build_upgrade-${{ github.run_id }}-9999 | tee -a "_local/upgradeTmp/package_ubcp-core/ubcp/cygwin"/info-github-upgrade && exit 1
          ! date +"%Y-%m-%d" | tee -a "_local/upgradeTmp/package_ubcp-core/ubcp/cygwin"/info-github-upgrade && exit 1
          #! echo from releaseOrigin= | tee -a "_local/upgradeTmp/package_ubcp-core/ubcp/cygwin"/info-github-upgrade && exit 1
          ! echo from releaseLabel=${{ inputs.releaseLabel }} | tee -a "_local/upgradeTmp/package_ubcp-core/ubcp/cygwin"/info-github-upgrade && exit 1
          true

      - name: _build_fallback_upgrade-ubcp-compress
        shell: bash
        timeout-minutes: 120
        run: |
          export skimfast=${{ inputs.skimfast }}
          echo $skimfast
          export devfast=${{ inputs.devfast }}
          echo $devfast
          ./ubiquitous_bash.sh _bin-build_import _build_fallback_upgrade-ubcp-compress

      - name: release!
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build_upgrade-${{ github.run_id }}-9999
          name: build_upgrade
          files: |
            _local/upgradeTmp/package_ubcp-core.7z
            _local/upgradeTmp/package_ubcp-core.log
            _local/upgradeTmp/ubcp-cygwin-portable-installer.log
            _local/upgradeTmp/_custom_splice_opensslConfig.log
            _local/upgradeTmp/_mitigate-ubcp.log
            _local/upgradeTmp/_setupUbiquitous.log
            _local/upgradeTmp/ubcp-binReport-UNIX_Linux
            _local/upgradeTmp/ubcp-homeReport-UNIX_Linux
            "_local/upgradeTmp/package_ubcp-core/ubcp/cygwin"/info-github-upgrade



  build_ubcp-report:
    needs: [build_ubcp]
    runs-on: windows-latest
    steps:
      - name: _getCore_ubcp
        shell: pwsh
        timeout-minutes: 180
        run: |
          mkdir /core
          mkdir /core/infrastructure
          cd /core/infrastructure
 
          Invoke-WebRequest -Uri ((Invoke-RestMethod -Uri "https://api.github.com/repos/mirage335-colossus/ubiquitous_bash/releases/latest" -Headers @{Authorization = "Bearer ${{ secrets.GITHUB_TOKEN }}" }).assets | Where-Object {$_.name -eq "package_ubcp-core.7z"}).browser_download_url -OutFile ./package_ubcp-core.7z

          7z -y x ./package_ubcp-core.7z | tee /_getCore_ubcp.log
          rm ./package_ubcp-core.7z
      - name: _getMinimal_cloud
        shell: pwsh
        timeout-minutes: 180
        run: |
          $ErrorActionPreference="SilentlyContinue"
          $ErrorActionPreference = "Continue"
          #Set-MpPreference -DisableRealtimeMonitoring $true
          date > /wasHere.log
          pwd >> /wasHere.log
          cat /wasHere.log
          #choco install qalculate -y
          choco install dos2unix -y
          #choco install nmap -y
          git config --global core.autocrlf input
          git config --global core.eol lf
          choco install 7zip.install -y
          #choco install rclone -y
      - uses: actions/checkout@v3
      - name: statement! ls
        shell: pwsh
        run: |
          ls /
          ls
          Get-CimInstance -ClassName Win32_LogicalDisk | Select-Object -Property DeviceID,@{'Name' = 'FreeSpace (GB)'
          Expression= { [int]($_.FreeSpace / 1GB) }}
      - name: _setupUbiquitous
        shell: pwsh
        timeout-minutes: 240
        run: |
          .\_setupUbiquitous | tee /_setupUbiquitous.log
      - name: _test-lean
        shell: pwsh
        timeout-minutes: 240
        run: |
          Set-Item -Path Env:devfast -Value ("${{ inputs.devfast }}")
          ./_test | tee /_test-lean.log
          $SEL = cat /_test-lean.log | Select-String -Pattern 'FAIL' -CaseSensitive -SimpleMatch
          if ($SEL -ne $null)
          {
          cat /bin/false/pwsh
          }
          else
          {
          echo true | Out-Null
          }
      #- name: _test-lean-compressed
        #shell: pwsh
        #timeout-minutes: 240
        #run: |
          #Set-Item -Path Env:devfast -Value ("${{ inputs.devfast }}")
          #./_bin.bat ./lean_compressed.sh _test | tee /_test-lean-compressed.log
          #$SEL = cat /_test-lean-compressed.log | Select-String -Pattern 'FAIL' -CaseSensitive -SimpleMatch
          #if ($SEL -ne $null)
          #{
          #cat /bin/false/pwsh
          #}
          #else
          #{
          #echo true | Out-Null
          #}
      - name: _setupUbiquitous
        shell: pwsh
        timeout-minutes: 240
        run: |
          .\_setupUbiquitous | tee /_setupUbiquitous.log
      - name: _custom_splice_opensslConfig
        shell: pwsh
        timeout-minutes: 240
        run: |
          #./_bin _custom_splice_opensslConfig | tee /_custom_splice_opensslConfig.log
          ./_bin _bin /cygdrive/c/core/infrastructure/ubiquitous_bash/ubiquitous_bash.sh _custom_splice_opensslConfig | tee /_custom_splice_opensslConfig.log
      - name: _report_setup_ubcp
        shell: pwsh
        timeout-minutes: 240
        run: |
          ./_bin.bat ./ubiquitous_bash.sh _report_setup_ubcp / | tee /_report_setup_ubcp.log
      - name: release!
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build_upgrade-${{ github.run_id }}-9999
          name: build_upgrade
          files: |
            /_test-lean.log
            /core/infrastructure/ubcp-binReport
            /core/infrastructure/ubcp-packageReport
      - name: statement! test-lean
        run: |
          cat /_test-lean.log
        shell: pwsh



  analysis_ubcp_missingBinaries:
    needs: [build_ubcp, build_ubcp-report]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
      - name: _getMinimal_cloud-special
        shell: bash
        timeout-minutes: 120
        run: |
          mkdir -p ./_local
          sudo -n apt-get update -y
          #sudo -n apt-get -y install jq gh curl coreutils p7zip findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux openssl
          sudo -n apt-get -y install jq gh curl coreutils findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux

      - name: fetch! ubcp-binReport
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-fetch 20 'ubcp-binReport'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: select! ubcp-binReport
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-select 'ubcp-binReport'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: analysis! missing-ubcp-binReport
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-analysis 65 'ubcp-binReport'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release! missing-ubcp-binReport
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build_upgrade-${{ github.run_id }}-9999
          name: build
          files: |
            ./_local/analysisTmp/missing-ubcp-binReport

      - name: ls! release! missing-ubcp-binReport
        shell: bash
        run: |
          ls ./_local/analysisTmp/missing-ubcp-binReport
          ./ubiquitous_bash.sh _safeRMR-analysisTmp
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  analysis_ubcp_missingPackages:
    needs: [build_ubcp, build_ubcp-report]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
      - name: _getMinimal_cloud-special
        shell: bash
        timeout-minutes: 120
        run: |
          mkdir -p ./_local
          sudo -n apt-get update -y
          #sudo -n apt-get -y install jq gh curl coreutils p7zip findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux openssl
          sudo -n apt-get -y install jq gh curl coreutils findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux

      - name: fetch! ubcp-packageReport
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-fetch 20 'ubcp-packageReport'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: select! ubcp-packageReport
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-select 'ubcp-packageReport'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: analysis! missing-ubcp-packageReport
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-analysis 65 'ubcp-packageReport'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release! missing-ubcp-packageReport
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build_upgrade-${{ github.run_id }}-9999
          name: build
          files: |
            ./_local/analysisTmp/missing-ubcp-packageReport

      - name: ls! release! missing-ubcp-packageReport
        shell: bash
        run: |
          ls ./_local/analysisTmp/missing-ubcp-packageReport
          ./ubiquitous_bash.sh _safeRMR-analysisTmp
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}






  analysis_ubcp_missingBinaries-UNIX_Linux:
    needs: [build_ubcp, build_ubcp-report]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
      - name: _getMinimal_cloud-special
        shell: bash
        timeout-minutes: 120
        run: |
          mkdir -p ./_local
          sudo -n apt-get update -y
          #sudo -n apt-get -y install jq gh curl coreutils p7zip findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux openssl
          sudo -n apt-get -y install jq gh curl coreutils findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux

      - name: fetch! ubcp-binReport-UNIX_Linux
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-fetch 20 'ubcp-binReport-UNIX_Linux'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: select! ubcp-binReport-UNIX_Linux
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-select 'ubcp-binReport-UNIX_Linux'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: analysis! missing-binReport-UNIX_Linux
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-analysis 65 'ubcp-binReport-UNIX_Linux'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release! missing-ubcp-packageReport
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build_upgrade-${{ github.run_id }}-9999
          name: build
          files: |
            ./_local/analysisTmp/missing-ubcp-binReport-UNIX_Linux

      - name: ls! release! missing-ubcp-binReport-UNIX_Linux
        shell: bash
        run: |
          ls ./_local/analysisTmp/missing-ubcp-binReport-UNIX_Linux
          ./ubiquitous_bash.sh _safeRMR-analysisTmp
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  analysis_ubcp_missingHome-UNIX_Linux:
    needs: [build_ubcp, build_ubcp-report]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
      - name: _getMinimal_cloud-special
        shell: bash
        timeout-minutes: 120
        run: |
          mkdir -p ./_local
          sudo -n apt-get update -y
          #sudo -n apt-get -y install jq gh curl coreutils p7zip findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux openssl
          sudo -n apt-get -y install jq gh curl coreutils findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux

      - name: fetch! ubcp-homeReport-UNIX_Linux
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-fetch 20 'ubcp-homeReport-UNIX_Linux'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: select! ubcp-homeReport-UNIX_Linux
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-select 'ubcp-homeReport-UNIX_Linux'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: analysis! missing-homeReport-UNIX_Linux
        shell: bash
        run: |
          ./ubiquitous_bash.sh _wget_githubRelease-fromTag-analysisReport-analysis 65 'ubcp-homeReport-UNIX_Linux'
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release! missing-ubcp-packageReport
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build_upgrade-${{ github.run_id }}-9999
          name: build
          files: |
            ./_local/analysisTmp/missing-ubcp-homeReport-UNIX_Linux

      - name: ls! release! missing-ubcp-homeReport-UNIX_Linux
        shell: bash
        run: |
          ls ./_local/analysisTmp/missing-ubcp-homeReport-UNIX_Linux
          ./ubiquitous_bash.sh _safeRMR-analysisTmp
        env:
          currentRepository: ${{ github.repository }}
          currentReleaseTag: build_upgrade-${{ github.run_id }}-9999
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


















































































































  build_compressed:
    #needs: [build_guard]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compile
        shell: bash
        timeout-minutes: 10
        run: |
          ./compile.sh
      - name: release! compile
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build_upgrade-${{ github.run_id }}-9999
          name: build_upgrade
          files: |
            ./lean_compressed.sh
            ./monolithic_compressed.sh
            ./rotten_compressed.sh
            ./ubcore_compressed.sh
            ./ubiquitous_bash_compressed.sh







