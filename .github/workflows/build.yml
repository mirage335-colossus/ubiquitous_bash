
name: build


# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  actions: write
  checks: read
  contents: write
  deployments: read
  issues: none
  packages: read
  pull-requests: read
  repository-projects: read
  security-events: none
  statuses: read


on:
  workflow_dispatch:
    inputs:
      devfast:
        type: boolean
        default: true
      skimfast:
        type: boolean
        default: true
      runnerNameMSW:
        required: false
        default: windows-latest-l
        type: choice
        options:
        - windows-latest
        - windows-latest-l
        - windows-latest-h
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    ##- cron: '5 1 * * 6'
    ##- cron: '5 1 * * 2,4'
    ##- cron: '5 1 * * 2'
    #- cron: '5 1 * * 4'
    - cron: '5 1 9 * *'

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true





# https://github.com/ncipollo/release-action
# https://github.com/softprops/action-gh-release
# https://svrooij.io/2021/08/17/github-actions-secret-file/
jobs:
  #build_guard:
    #runs-on: ubuntu-latest
    #steps:
      #- uses: actions/checkout@v2
      #- uses: dev-drprasad/delete-tag-and-release@v1.0
        #with:
            #tag_name: build-${{ github.run_id }}-${{ github.run_attempt }} #(required) tag name to delete 
            #github_token: ${{ secrets.GITHUB_TOKEN }}
            #delete_release: true #(optional) default: true 
  build_ubcp:
    #needs: [build_guard, build_compressed]
    runs-on: ${{ github.event.inputs.runnerNameMSW == '' && 'windows-latest' || github.event.inputs.runnerNameMSW }}
    steps:
      # https://adamtheautomator.com/powershell-get-disk-space/
      #- name: build_ubcp_powershell
        #run: |
          #./_lib/kit/install/cloud/zSpecial/msw/build_ubcp/build_ubcp_powershell.ps1
        #shell: pwsh
      # _lib/kit/install/cloud/zSpecial/msw/build_ubcp/build_ubcp_powershell.ps1
      #- name: deleteme
        #shell: pwsh
        #timeout-minutes: 240
        #run: |
          #echo deleteme | tee /deleteme
        #continue-on-error: true
      #- name: release! deleteme
        #uses: softprops/action-gh-release@v1
        #with:
          #tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          #name: build
          #files: |
            #/deleteme
      - name: _getMinimal_cloud
        shell: pwsh
        timeout-minutes: 180
        run: |
          $ErrorActionPreference="SilentlyContinue"
          $ErrorActionPreference = "Continue"
          #Set-MpPreference -DisableRealtimeMonitoring $true
          date > /wasHere.log
          pwd >> /wasHere.log
          cat /wasHere.log
          #choco install qalculate -y
          choco install dos2unix -y
          #choco install nmap -y
          git config --global core.autocrlf input
          git config --global core.eol lf
          choco install 7zip.install -y
          #choco install rclone -y
      - uses: actions/checkout@v2
      - name: statement! ls
        if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: pwsh
        run: |
          ls /
          ls
          Get-CimInstance -ClassName Win32_LogicalDisk | Select-Object -Property DeviceID,@{'Name' = 'FreeSpace (GB)'
          Expression= { [int]($_.FreeSpace / 1GB) }}
      - name: ubcp-cygwin-portable-installer
        shell: pwsh
        timeout-minutes: 240
        run: |
          cd ./_local/ubcp
          .\ubcp-cygwin-portable-installer | tee /ubcp-cygwin-portable-installer.log
          cp ubcp_rename-to-enable.cmd ubcp.cmd
        #continue-on-error: true
      - name: release! ubcp-cygwin-portable-installer.log
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            /ubcp-cygwin-portable-installer.log
      - name: statement! ubcp-cygwin-portable-installer
        if: ${{ github.event.inputs.skimfast != 'true' }}
        run: |
          cat /ubcp-cygwin-portable-installer.log
        shell: pwsh
      - name: _disable_fileBlocking
        shell: pwsh
        timeout-minutes: 240
        run: |
          mv _local/ubcp/cygwin/bin/ssh-pageant.exe _local/ubcp/cygwin/bin/ssh-pageant.disabled
          cp _local/ubcp/cygwin/bin/true.exe _local/ubcp/cygwin/bin/ssh-pageant.exe
      - name: _delete_cache
        shell: pwsh
        timeout-minutes: 240
        run: |
          Remove-Item -Recurse -Force _local/ubcp/cygwin/.pkg-cache
      - name: _setupUbiquitous
        shell: pwsh
        timeout-minutes: 240
        run: |
          .\_setupUbiquitous | tee /_setupUbiquitous.log
      - name: _custom_splice_opensslConfig
        shell: pwsh
        timeout-minutes: 240
        run: |
          ./_bin _custom_splice_opensslConfig | tee /_custom_splice_opensslConfig.log
      - name: release! _setupUbiquitous.log
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            /_setupUbiquitous.log
            /_custom_splice_opensslConfig.log
      - name: statement! _setupUbiquitous
        if: ${{ github.event.inputs.skimfast != 'true' }}
        run: |
          Get-Content -Path /_setupUbiquitous.log | Measure-Object -Line -Word -Character
          cat /_setupUbiquitous.log
        shell: pwsh
      #- name: _package-cygwinOnly noMitigation
        #shell: pwsh
        #timeout-minutes: 240
        #run: |
          #./_bin _package-cygwinOnly
          #mv ./_local/ubcp/package_ubcp-cygwinOnly.tar.xz /package_ubcp-cygwinOnly-noMitigation.tar.xz
      #- name: release! package_ubcp-cygwinOnly-noMitigation.tar.xz
        #uses: softprops/action-gh-release@v1
        #with:
          #tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          #name: build
          #files: |
            #/package_ubcp-cygwinOnly-noMitigation.tar.xz
      #- name: rm - _package-cygwinOnly noMitigation
        #shell: pwsh
        #timeout-minutes: 240
        #run: |
          #rm /package_ubcp-cygwinOnly-noMitigation.tar.xz
      - name: _mitigate-ubcp
        shell: pwsh
        timeout-minutes: 240
        run: |
          Set-Item -Path Env:skimfast -Value ("${{ inputs.skimfast }}")
          ./_bin _mitigate-ubcp | tee /_mitigate-ubcp.log
          ./_bin _color_end
      - name: release! _mitigate-ubcp.log
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            /_mitigate-ubcp.log
      - name: statement! statistics! _mitigate-ubcp
        if: ${{ github.event.inputs.skimfast != 'true' }}
        run: |
          Get-Content -Path /_mitigate-ubcp.log | Measure-Object -Line -Word -Character
        shell: pwsh
      - name: _package-cygwinOnly
        shell: pwsh
        timeout-minutes: 240
        run: |
          Set-Item -Path Env:skimfast -Value ("${{ inputs.skimfast }}")
          ./_bin _package-cygwinOnly
      #- name: release! package_ubcp-cygwinOnly.tar.xz
        #uses: softprops/action-gh-release@v1
        #with:
          #tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          #name: build
          #files: |
            #./_local/ubcp/package_ubcp-cygwinOnly.tar.xz
      #- name: _MSWpackage package_ubiquitous_bash-msw
        #shell: pwsh
        #timeout-minutes: 240
        #run: |
          #cd ..
          #7z -y a -t7z /package_ubiquitous_bash-msw.7z ./ubiquitous_bash | tee /package_ubiquitous_bash-msw.log
      #- name: release! _MSWpackage package_ubiquitous_bash-msw
        #uses: softprops/action-gh-release@v1
        #with:
          #tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          #name: build
          #files: |
            #/package_ubiquitous_bash-msw.log
            #/package_ubiquitous_bash-msw.7z
      #- name: rm - _MSWpackage package_ubiquitous_bash-msw
        #shell: pwsh
        #timeout-minutes: 240
        #run: |
          #rm /package_ubiquitous_bash-msw.7z
      #- name: statement! package_ubiquitous_bash-msw
        #run: |
          #cat /package_ubiquitous_bash-msw.log
        #shell: pwsh
      - name: statement! ls
        if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: pwsh
        run: |
          ls /
          ls
          Get-CimInstance -ClassName Win32_LogicalDisk | Select-Object -Property DeviceID,@{'Name' = 'FreeSpace (GB)'
          Expression= { [int]($_.FreeSpace / 1GB) }}
      - name: _setup_ubcp
        shell: pwsh
        timeout-minutes: 240
        run: |
          Set-Item -Path Env:skimfast -Value ("${{ inputs.skimfast }}")
          ./_bin _setup_ubcp / | tee /_setup_ubcp.log
      - name: statement! ls
        if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: pwsh
        run: |
          ls /
          ls
          Get-CimInstance -ClassName Win32_LogicalDisk | Select-Object -Property DeviceID,@{'Name' = 'FreeSpace (GB)'
          Expression= { [int]($_.FreeSpace / 1GB) }}
      - name: _MSWpackage package_ubcp-core - skimfast
        if: ${{ github.event.inputs.skimfast == 'true' }}
        shell: pwsh
        timeout-minutes: 240
        run: |
          cd ..
          7z -y a -t7z -m0=lzma2 -mmt=6 -mx=9 /package_ubcp-core.7z /core/infrastructure/ubcp /core/infrastructure/ubiquitous_bash /_bash.bat | tee /package_ubcp-core.log
      - name: _MSWpackage package_ubcp-core
        if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: pwsh
        timeout-minutes: 240
        run: |
          cd ..
          7z -y a -t7z -m0=lzma2 -mmt=6 ${{ github.event.inputs.skimfast == 'true' && '-mx=1' || github.event.inputs.skimfast != 'true' && '-mx=9' }} /package_ubcp-core.7z /core/infrastructure/ubcp /core/infrastructure/ubiquitous_bash /_bash.bat | tee /package_ubcp-core.log
      - name: release! _MSWpackage package_ubcp-core
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            /package_ubcp-core.log
            /package_ubcp-core.7z
            /core/infrastructure/ubcp-binReport
      - name: rm - _MSWpackage package_ubcp-core
        shell: pwsh
        timeout-minutes: 240
        run: |
          rm /package_ubcp-core.7z
          Remove-Item -Recurse -Force /core/infrastructure/ubcp
          Remove-Item -Recurse -Force /core/infrastructure/ubiquitous_bash
      #- name: _MSWpackage package_ubiquitous_bash-msw-rotten
        #shell: pwsh
        #timeout-minutes: 240
        #run: |
          #cd ..
          #rm ./ubiquitous_bash/_local/ubcp/package_ubcp-cygwinOnly.tar.xz
          #7z -y a -t7z /package_ubiquitous_bash-msw-rotten.7z ./ubiquitous_bash | tee /package_ubiquitous_bash-msw-rotten.log
      #- name: release! _MSWpackage package_ubiquitous_bash-msw-rotten
        #uses: softprops/action-gh-release@v1
        #with:
          #tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          #name: build
          #files: |
            #/package_ubiquitous_bash-msw-rotten.log
            #/package_ubiquitous_bash-msw-rotten.7z
      #- name: rm - _MSWpackage package_ubiquitous_bash-msw-rotten
        #shell: pwsh
        #timeout-minutes: 240
        #run: |
          #rm /package_ubiquitous_bash-msw-rotten.7z
      # https://adamtheautomator.com/powershell-get-disk-space/
      - name: statement! ls
        if: ${{ github.event.inputs.skimfast != 'true' }}
        shell: pwsh
        run: |
          ls /
          ls
          Get-CimInstance -ClassName Win32_LogicalDisk | Select-Object -Property DeviceID,@{'Name' = 'FreeSpace (GB)'
          Expression= { [int]($_.FreeSpace / 1GB) }}
      
      # WARNING: Very unusual . Elsewhere, '_test' is also necessarily used to cause '_getDep' and similar. Do NOT move '_test' to the end of other build scripts.
      # Building 'ubcp' from Cygwin/MSW is very much a special case, for which '_test' would be all of, relatively slow, less consequential, and less likely to fail.
      - name: _test-lean
        shell: pwsh
        timeout-minutes: 240
        run: |
          Set-Item -Path Env:devfast -Value ("${{ inputs.devfast }}")
          .\_test | tee /_test-lean.log
          $SEL = cat /_test-lean.log | Select-String -Pattern 'FAIL' -CaseSensitive -SimpleMatch
          if ($SEL -ne $null)
          {
          cat /bin/false/pwsh
          }
          else
          {
          echo true | Out-Null
          }
      - name: release! _test-lean.log
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            /_test-lean.log
      - name: statement! test-lean
        run: |
          cat /_test-lean.log
        shell: pwsh


  analysis_ubcp:
    needs: [build_ubcp]
    runs-on: ubuntu-latest
    steps:
      - name: analysis! missing-binaries
        shell: bash
        run: |
          # Get the list of releases
          RELEASES=$(curl -s -H "Authorization: token $GH_TOKEN" https://api.github.com/repos/mirage335-colossus/ubiquitous_bash/releases)

          # Loop through each release
          for RELEASE in $(echo "$RELEASES" | jq -r '.[].tag_name' | sort --reverse); do
            # Download the binReport file for this release
            curl -s -H "Authorization: token $GH_TOKEN" -L -o "ubcp-binReport-$RELEASE" "https://github.com/mirage335-colossus/ubiquitous_bash/releases/download/$RELEASE/ubcp-binReport"

            # Compare the list of binaries in this release to the current release
            if [ "$RELEASE" != "$currentReleaseTag" ]; then
              echo | tee -a ./missing-ubcp-binReport
              echo "Binaries (filesystem) in $RELEASE but not in currentRelease $currentReleaseTag:" | tee -a ./missing-ubcp-binReport
              comm -23 <(sort "ubcp-binReport-$RELEASE") <(sort "ubcp-binReport-$currentReleaseTag") | tee -a ./missing-ubcp-binReport
            fi
          done
        env:
          currentReleaseTag: build-${{ github.run_id }}-${{ github.run_attempt }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: release! missing-ubcp-binReport
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./missing-ubcp-binReport






















  build_compressed:
    #needs: [build_guard]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compile
        shell: bash
        timeout-minutes: 10
        run: |
          ./compile.sh
      - name: release! compile
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
          name: build
          files: |
            ./lean_compressed.sh
            ./monolithic_compressed.sh
            ./rotten_compressed.sh
            ./ubcore_compressed.sh
            ./ubiquitous_bash_compressed.sh




