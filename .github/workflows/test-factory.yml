
# WARNING: May be untested .

name: test-factory


# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none



on:
  push:
  workflow_dispatch:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    #- cron: '5 1 * * 6'
    #- cron: '5 1 * * 2,4'
    #- cron: '5 1 * * 2'
    #- cron: '5 1 * * 4'
    - cron: '5 1 * * 5'

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_latest:
    runs-on: ubuntu-latest
    #runs-on: ubuntu-20.04
    #runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
      #- name: _getMinimal_cloud
        #shell: bash
        #timeout-minutes: 120
        #run: |
          #./ubiquitous_bash.sh _getMinimal_cloud
      #- name: _getMinimal_cloud-special
        #shell: bash
        #timeout-minutes: 120
        #run: |
          #sudo -n apt-get update -y
          #sudo -n apt-get -y install jq gh curl coreutils findutils tar gzip bzip2 sed axel aria2 rsync pv dos2unix xxd util-linux openssl
          #./ubiquitous_bash.sh _here_opensslConfig_legacy | sudo -n tee /etc/ssl/openssl_legacy.cnf > /dev/null 2>&1
          #if ! sudo -n grep 'openssl_legacy' /etc/ssl/openssl.cnf > /dev/null 2>&1
          #then
              #sudo -n cp -f /etc/ssl/openssl.cnf /etc/ssl/openssl.cnf.orig
              #echo '


              #.include = /etc/ssl/openssl_legacy.cnf

              #' | sudo -n cat /etc/ssl/openssl.cnf.orig - | sudo -n tee /etc/ssl/openssl.cnf > /dev/null 2>&1
          #fi
          #true


      - name: _true
        shell: bash
        timeout-minutes: 120
        run: |
          ./ubiquitous_bash.sh _true
          ./_true | sudo -n tee ./_local/_true.log && exit ${PIPESTATUS[0]}
      - name: _false
        shell: bash
        timeout-minutes: 120
        run: |
          ! ./ubiquitous_bash.sh _false
          ( ! ./_false ) | sudo -n tee ./_local/_false.log && exit ${PIPESTATUS[0]}
      - name: ___factoryTest_skip_recursion2
        shell: bash
        timeout-minutes: 120
        continue-on-error: true
        run: |
          ./ubiquitous_bash.sh ___factoryTest_skip_recursion2
      - name: ___factoryTest_skip_recursion1
        shell: bash
        timeout-minutes: 120
        continue-on-error: true
        run: |
          ./ubiquitous_bash.sh ___factoryTest_skip_recursion1
      - name: ___factoryTest
        shell: bash
        timeout-minutes: 120
        continue-on-error: true
        run: |
          ./ubiquitous_bash.sh ___factoryTest_direct

      - name: _getCore_ub
        shell: bash
        timeout-minutes: 90
        run: |
          mkdir -p ~/core/infrastructure
          cd ~/core/infrastructure
          git clone --depth 1 --recursive https://github.com/mirage335-colossus/ubiquitous_bash.git
          cd ubiquitous_bash
          ./_setupUbiquitous.bat

      - name: _true
        shell: bash
        timeout-minutes: 120
        run: |
          ./ubiquitous_bash.sh _true
          ./_true | sudo -n tee ./_local/_true.log && exit ${PIPESTATUS[0]}
      - name: _false
        shell: bash
        timeout-minutes: 120
        run: |
          ! ./ubiquitous_bash.sh _false
          ( ! ./_false ) | sudo -n tee ./_local/_false.log && exit ${PIPESTATUS[0]}
      - name: ___factoryTest_skip_recursion2
        shell: bash
        timeout-minutes: 120
        continue-on-error: true
        run: |
          ./ubiquitous_bash.sh ___factoryTest_skip_recursion2
      - name: ___factoryTest_skip_recursion1
        shell: bash
        timeout-minutes: 120
        continue-on-error: true
        run: |
          ./ubiquitous_bash.sh ___factoryTest_skip_recursion1
      - name: ___factoryTest
        shell: bash
        timeout-minutes: 120
        run: |
          ./ubiquitous_bash.sh ___factoryTest_direct


