#!/usr/bin/env bash
[[ "$PATH" != *"/usr/local/bin"* ]] && [[ -e "/usr/local/bin" ]] && export PATH=/usr/local/bin:"$PATH"
[[ "$PATH" != *"/usr/bin"* ]] && [[ -e "/usr/bin" ]] && export PATH=/usr/bin:"$PATH"
[[ "$PATH" != *"/bin:"* ]] && [[ -e "/bin" ]] && export PATH=/bin:"$PATH"
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript
export ub_setScriptChecksum_disable="true"
current_internal_CompressedScript_bytes='14493'
current_internal_CompressedScript_cksum='3718591148'
current_internal_CompressedScript='
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'
current_internal_compressedScript_headerFunctions='
/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4CsHA1pdAC+ciKYksL89qRi90TdMvSwSEM6J8ipM2rR/Iqc/oYbShD5P+hKgz3ONSu7BhrUf8OSN4oZ8BL1e7m0JQ33pEQs007VTHA7nLczyIuWiilZSo+0zB132
DrV189uAlZ6oqD3MK7bjrSmuGreEaBOC+z5QkGUPIDVaXfJmDg73/A1Y9JqRKxtli7ZDurfX2t/Z3m6RV6ku3LwPHl2qt8/kbWEubRkY3Fl2VTTFWjQ8Z9qfpBK4YyV7fw3X3hcUmN6Fz+u2P8eCSl/fCnNX
HtvGeiwoJbZ3wje2iPvqVhHoy0BMVkEDcSqWo+znkV0BwqE45qLsZQ9IGG1CzglgciwcOU2fdsqKBFC5XA3WYFGg6uZ2q4mvn5jWR+FbeUz7YjupLAvLl7DE+daOBWzzyYeFrcMhDk1QeqOKpv41V0GTTqAm
Z7lRbPrhk3oRY/kBiQGZSfRuxTSmIc1zevrFy6JWcZkCJayU/wQ+XEKdvF51XHH+OYrSuhIxvk6G+Ce0sbTr3GBfVRQYdRpxeOs48xNaEfmBf6GZcWUMx5L3LA4cup19vL4O75JjKbnlJeYdoRCjtcPE7A8S
82KbKVXWm5n1ADflKsnTX3CVTSu7uS4pVXHlludUnC/0dCPIaO2WxpZTXETnBW0SD0f3HTs7UDEzwk7eMHnoe3xk/cdsh16yyG0jPOBLHEqULsotf/cimpgvkZlFxPNFKvrB2sVBDpjr393u8l5sSqQ9L5Vr
QgGi6nBnxhDESgC1fQ6p4D6w2joYaBQzVX0ShFGEK+bvZ6VjUbYJlLF4gx2eezXDlEClVs6t/VpATWVe263gsdVgRirp4aPGEtCnMOl6oAU3laA3KDdlQbcC906c44adhj8dQ6w5GG1zEy5jv73Q/CBnpuh4
6Q2uqurIYFG/4bzAesrLfJaMbHC5QEx2yRFLlLaXzwYBqGzW1kQN1LZUOdFDF746w4C4eMXwHmuiAdpwV2muM75Gv4UeLCX8pXZlUOuUnruNLaDG9Tq1m+cWA1lXHyWJ4wB4kyv4KtgYXHsQL1t6bC8gD9ly
TvtNA8FiEDaU4PeofKVcYpu+2JSbjM6pr/bbQKOmEr2szDpnOSz/0dZivx9HodtgWaii7I0ZRCSi9eNbuNfa+H7BpKNBHwAAADfa2eLaotFaAAH2BohWAACvFwLPscRn+wIAAAAABFla'
! echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d > /dev/null && exit 1
	source <(echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d)
export importScriptLocation=$(_getScriptAbsoluteLocation)
export importScriptFolder=$(_getScriptAbsoluteFolder)
! type readlink > /dev/null 2>&1 && exit 1;
! type dirname > /dev/null 2>&1 && exit 1;
! type basename > /dev/null 2>&1 && exit 1;
! readlink -f . > /dev/null 2>&1 && exit 1;
[[ "$1" == "--profile" ]] && ( [[ rotten == "rotten"* ]] || [[ rotten == "rotten" ]] ) && export ub_import="true" && export importScriptLocation="$profileScriptLocation" && export importScriptFolder="$profileScriptFolder"
[[ "$importScriptLocation" == "" ]] && exit 1
[[ "$importScriptFolder" == "" ]] && exit 1
! _getAbsolute_criticalDep && exit 1
! _compressed_criticalDep && exit 1
! echo "$current_internal_CompressedScript" | base64 -d | xz -d > /dev/null && exit 1
if [[ "$1" == "--embed" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
elif [[ "$1" == "--profile" ]] || [[ "$1" == "--parent" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
else
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) --compressed "$@"
	ub_import=
	ub_import_param=
	ub_import_script=
	ub_loginshell=
fi
if [[ "$ub_import" == "true" ]] && ! ( [[ "$ub_import_param" == "--bypass" ]] ) || [[ "$ub_import_param" == "--compressed" ]] || [[ "$ub_import_param" == "--parent" ]] || [[ "$ub_import_param" == "--profile" ]]
then
	if [[ "$ubiquitousBashID" != "" ]] || [[ -e "$HOME"/.ubcore ]] || ( [[ rotten != "rotten"* ]] || [[ rotten != "rotten" ]] )
	then
		return 0 > /dev/null 2>&1
		exit 0
	fi
fi
unset current_internal_CompressedScript ; unset current_internal_CompressedScript_cksum ; unset current_internal_CompressedScript_bytes
export ub_setScriptChecksum_disable=
unset ub_setScriptChecksum_disable
true
# https://github.com/mirage335/ubiquitous_bash
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript






#####Entry
# ###
























_test_prog() {
	true
}
_main() {
	#_start
	_start scriptLocal_mkdir_disable
	
	_collect
	
	_enter "$@"
	
	_stop
}
if [[ "$1" == '_test' ]]
then
	current_deleteScriptLocal="false"
	[[ ! -e "$scriptLocal" ]] && current_deleteScriptLocal="true"
	_stop_prog() {
		[[ "$current_deleteScriptLocal" == "true" ]] && rmdir "$scriptLocal" > /dev/null 2>&1
	}
fi
if [[ "$1" == '_'* ]] && type "$1" > /dev/null 2>&1
then
	"$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
fi
if [[ "$1" != '_'* ]]
then
	_main "$@"
fi

