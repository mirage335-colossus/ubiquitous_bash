#!/usr/bin/env bash
[[ "$PATH" != *"/usr/local/bin"* ]] && [[ -e "/usr/local/bin" ]] && export PATH=/usr/local/bin:"$PATH"
[[ "$PATH" != *"/usr/bin"* ]] && [[ -e "/usr/bin" ]] && export PATH=/usr/bin:"$PATH"
[[ "$PATH" != *"/bin:"* ]] && [[ -e "/bin" ]] && export PATH=/bin:"$PATH"
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript
export ub_setScriptChecksum_disable="true"
current_internal_CompressedScript_bytes='14758'
current_internal_CompressedScript_cksum='2943862038'
current_internal_CompressedScript='
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'
current_internal_compressedScript_headerFunctions='
/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4CsHA1pdAC+ciKYksL89qRi90TdMvSwSEM6J8ipM2rR/Iqc/oYbShD5P+hKgz3ONSu7BhrUf8OSN4oZ8BL1e7m0JQ33pEQs007VTHA7nLczyIuWiilZSo+0zB132
DrV189uAlZ6oqD3MK7bjrSmuGreEaBOC+z5QkGUPIDVaXfJmDg73/A1Y9JqRKxtli7ZDurfX2t/Z3m6RV6ku3LwPHl2qt8/kbWEubRkY3Fl2VTTFWjQ8Z9qfpBK4YyV7fw3X3hcUmN6Fz+u2P8eCSl/fCnNX
HtvGeiwoJbZ3wje2iPvqVhHoy0BMVkEDcSqWo+znkV0BwqE45qLsZQ9IGG1CzglgciwcOU2fdsqKBFC5XA3WYFGg6uZ2q4mvn5jWR+FbeUz7YjupLAvLl7DE+daOBWzzyYeFrcMhDk1QeqOKpv41V0GTTqAm
Z7lRbPrhk3oRY/kBiQGZSfRuxTSmIc1zevrFy6JWcZkCJayU/wQ+XEKdvF51XHH+OYrSuhIxvk6G+Ce0sbTr3GBfVRQYdRpxeOs48xNaEfmBf6GZcWUMx5L3LA4cup19vL4O75JjKbnlJeYdoRCjtcPE7A8S
82KbKVXWm5n1ADflKsnTX3CVTSu7uS4pVXHlludUnC/0dCPIaO2WxpZTXETnBW0SD0f3HTs7UDEzwk7eMHnoe3xk/cdsh16yyG0jPOBLHEqULsotf/cimpgvkZlFxPNFKvrB2sVBDpjr393u8l5sSqQ9L5Vr
QgGi6nBnxhDESgC1fQ6p4D6w2joYaBQzVX0ShFGEK+bvZ6VjUbYJlLF4gx2eezXDlEClVs6t/VpATWVe263gsdVgRirp4aPGEtCnMOl6oAU3laA3KDdlQbcC906c44adhj8dQ6w5GG1zEy5jv73Q/CBnpuh4
6Q2uqurIYFG/4bzAesrLfJaMbHC5QEx2yRFLlLaXzwYBqGzW1kQN1LZUOdFDF746w4C4eMXwHmuiAdpwV2muM75Gv4UeLCX8pXZlUOuUnruNLaDG9Tq1m+cWA1lXHyWJ4wB4kyv4KtgYXHsQL1t6bC8gD9ly
TvtNA8FiEDaU4PeofKVcYpu+2JSbjM6pr/bbQKOmEr2szDpnOSz/0dZivx9HodtgWaii7I0ZRCSi9eNbuNfa+H7BpKNBHwAAADfa2eLaotFaAAH2BohWAACvFwLPscRn+wIAAAAABFla'
! echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d > /dev/null && exit 1
	source <(echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d)
export importScriptLocation=$(_getScriptAbsoluteLocation)
export importScriptFolder=$(_getScriptAbsoluteFolder)
! type readlink > /dev/null 2>&1 && exit 1;
! type dirname > /dev/null 2>&1 && exit 1;
! type basename > /dev/null 2>&1 && exit 1;
! readlink -f . > /dev/null 2>&1 && exit 1;
[[ "$1" == "--profile" ]] && ( [[ rotten == "rotten"* ]] || [[ rotten == "rotten" ]] ) && export ub_import="true" && export importScriptLocation="$profileScriptLocation" && export importScriptFolder="$profileScriptFolder"
[[ "$importScriptLocation" == "" ]] && exit 1
[[ "$importScriptFolder" == "" ]] && exit 1
! _getAbsolute_criticalDep && exit 1
! _compressed_criticalDep && exit 1
! echo "$current_internal_CompressedScript" | base64 -d | xz -d > /dev/null && exit 1
if [[ "$1" == "--embed" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
elif [[ "$1" == "--profile" ]] || [[ "$1" == "--parent" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
else
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) --compressed "$@"
	ub_import=
	ub_import_param=
	ub_import_script=
	ub_loginshell=
fi
if [[ "$ub_import" == "true" ]] && ! ( [[ "$ub_import_param" == "--bypass" ]] ) || [[ "$ub_import_param" == "--compressed" ]] || [[ "$ub_import_param" == "--parent" ]] || [[ "$ub_import_param" == "--profile" ]]
then
	if [[ "$ubiquitousBashID" != "" ]] || [[ -e "$HOME"/.ubcore ]] || ( [[ rotten != "rotten"* ]] || [[ rotten != "rotten" ]] )
	then
		return 0 > /dev/null 2>&1
		exit 0
	fi
fi
unset current_internal_CompressedScript ; unset current_internal_CompressedScript_cksum ; unset current_internal_CompressedScript_bytes
export ub_setScriptChecksum_disable=
unset ub_setScriptChecksum_disable
true
# https://github.com/mirage335/ubiquitous_bash
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript






#####Entry
# ###
























_test_prog() {
	true
}
_main() {
	#_start
	_start scriptLocal_mkdir_disable
	
	_collect
	
	_enter "$@"
	
	_stop
}
if [[ "$1" == '_test' ]]
then
	current_deleteScriptLocal="false"
	[[ ! -e "$scriptLocal" ]] && current_deleteScriptLocal="true"
	_stop_prog() {
		[[ "$current_deleteScriptLocal" == "true" ]] && rmdir "$scriptLocal" > /dev/null 2>&1
	}
fi
if [[ "$1" == '_'* ]] && type "$1" > /dev/null 2>&1
then
	"$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
fi
if [[ "$1" != '_'* ]]
then
	_main "$@"
fi

