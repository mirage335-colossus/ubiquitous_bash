#!/usr/bin/env bash
[[ "$PATH" != *"/usr/local/bin"* ]] && [[ -e "/usr/local/bin" ]] && export PATH=/usr/local/bin:"$PATH"
[[ "$PATH" != *"/usr/bin"* ]] && [[ -e "/usr/bin" ]] && export PATH=/usr/bin:"$PATH"
[[ "$PATH" != *"/bin:"* ]] && [[ -e "/bin" ]] && export PATH=/bin:"$PATH"
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript
export ub_setScriptChecksum_disable="true"
current_internal_CompressedScript_bytes='14489'
current_internal_CompressedScript_cksum='1386134667'
current_internal_CompressedScript='
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'
current_internal_compressedScript_headerFunctions='
/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4CsHA1pdAC+ciKYksL89qRi90TdMvSwSEM6J8ipM2rR/Iqc/oYbShD5P+hKgz3ONSu7BhrUf8OSN4oZ8BL1e7m0JQ33pEQs007VTHA7nLczyIuWiilZSo+0zB132
DrV189uAlZ6oqD3MK7bjrSmuGreEaBOC+z5QkGUPIDVaXfJmDg73/A1Y9JqRKxtli7ZDurfX2t/Z3m6RV6ku3LwPHl2qt8/kbWEubRkY3Fl2VTTFWjQ8Z9qfpBK4YyV7fw3X3hcUmN6Fz+u2P8eCSl/fCnNX
HtvGeiwoJbZ3wje2iPvqVhHoy0BMVkEDcSqWo+znkV0BwqE45qLsZQ9IGG1CzglgciwcOU2fdsqKBFC5XA3WYFGg6uZ2q4mvn5jWR+FbeUz7YjupLAvLl7DE+daOBWzzyYeFrcMhDk1QeqOKpv41V0GTTqAm
Z7lRbPrhk3oRY/kBiQGZSfRuxTSmIc1zevrFy6JWcZkCJayU/wQ+XEKdvF51XHH+OYrSuhIxvk6G+Ce0sbTr3GBfVRQYdRpxeOs48xNaEfmBf6GZcWUMx5L3LA4cup19vL4O75JjKbnlJeYdoRCjtcPE7A8S
82KbKVXWm5n1ADflKsnTX3CVTSu7uS4pVXHlludUnC/0dCPIaO2WxpZTXETnBW0SD0f3HTs7UDEzwk7eMHnoe3xk/cdsh16yyG0jPOBLHEqULsotf/cimpgvkZlFxPNFKvrB2sVBDpjr393u8l5sSqQ9L5Vr
QgGi6nBnxhDESgC1fQ6p4D6w2joYaBQzVX0ShFGEK+bvZ6VjUbYJlLF4gx2eezXDlEClVs6t/VpATWVe263gsdVgRirp4aPGEtCnMOl6oAU3laA3KDdlQbcC906c44adhj8dQ6w5GG1zEy5jv73Q/CBnpuh4
6Q2uqurIYFG/4bzAesrLfJaMbHC5QEx2yRFLlLaXzwYBqGzW1kQN1LZUOdFDF746w4C4eMXwHmuiAdpwV2muM75Gv4UeLCX8pXZlUOuUnruNLaDG9Tq1m+cWA1lXHyWJ4wB4kyv4KtgYXHsQL1t6bC8gD9ly
TvtNA8FiEDaU4PeofKVcYpu+2JSbjM6pr/bbQKOmEr2szDpnOSz/0dZivx9HodtgWaii7I0ZRCSi9eNbuNfa+H7BpKNBHwAAADfa2eLaotFaAAH2BohWAACvFwLPscRn+wIAAAAABFla'
! echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d > /dev/null && exit 1
	source <(echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d)
export importScriptLocation=$(_getScriptAbsoluteLocation)
export importScriptFolder=$(_getScriptAbsoluteFolder)
! type readlink > /dev/null 2>&1 && exit 1;
! type dirname > /dev/null 2>&1 && exit 1;
! type basename > /dev/null 2>&1 && exit 1;
! readlink -f . > /dev/null 2>&1 && exit 1;
[[ "$1" == "--profile" ]] && ( [[ rotten == "rotten"* ]] || [[ rotten == "rotten" ]] ) && export ub_import="true" && export importScriptLocation="$profileScriptLocation" && export importScriptFolder="$profileScriptFolder"
[[ "$importScriptLocation" == "" ]] && exit 1
[[ "$importScriptFolder" == "" ]] && exit 1
! _getAbsolute_criticalDep && exit 1
! _compressed_criticalDep && exit 1
! echo "$current_internal_CompressedScript" | base64 -d | xz -d > /dev/null && exit 1
if [[ "$1" == "--embed" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
elif [[ "$1" == "--profile" ]] || [[ "$1" == "--parent" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
else
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) --compressed "$@"
	ub_import=
	ub_import_param=
	ub_import_script=
	ub_loginshell=
fi
if [[ "$ub_import" == "true" ]] && ! ( [[ "$ub_import_param" == "--bypass" ]] ) || [[ "$ub_import_param" == "--compressed" ]] || [[ "$ub_import_param" == "--parent" ]] || [[ "$ub_import_param" == "--profile" ]]
then
	if [[ "$ubiquitousBashID" != "" ]] || [[ -e "$HOME"/.ubcore ]] || ( [[ rotten != "rotten"* ]] || [[ rotten != "rotten" ]] )
	then
		return 0 > /dev/null 2>&1
		exit 0
	fi
fi
unset current_internal_CompressedScript ; unset current_internal_CompressedScript_cksum ; unset current_internal_CompressedScript_bytes
export ub_setScriptChecksum_disable=
unset ub_setScriptChecksum_disable
true
# https://github.com/mirage335/ubiquitous_bash
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript






#####Entry
# ###
























_test_prog() {
	true
}
_main() {
	#_start
	_start scriptLocal_mkdir_disable
	
	_collect
	
	_enter "$@"
	
	_stop
}
if [[ "$1" == '_test' ]]
then
	current_deleteScriptLocal="false"
	[[ ! -e "$scriptLocal" ]] && current_deleteScriptLocal="true"
	_stop_prog() {
		[[ "$current_deleteScriptLocal" == "true" ]] && rmdir "$scriptLocal" > /dev/null 2>&1
	}
fi
if [[ "$1" == '_'* ]] && type "$1" > /dev/null 2>&1
then
	"$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
fi
if [[ "$1" != '_'* ]]
then
	_main "$@"
fi

