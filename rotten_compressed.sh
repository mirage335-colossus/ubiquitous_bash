#!/usr/bin/env bash
[[ "$PATH" != *"/usr/local/bin"* ]] && [[ -e "/usr/local/bin" ]] && export PATH=/usr/local/bin:"$PATH"
[[ "$PATH" != *"/usr/bin"* ]] && [[ -e "/usr/bin" ]] && export PATH=/usr/bin:"$PATH"
[[ "$PATH" != *"/bin:"* ]] && [[ -e "/bin" ]] && export PATH=/bin:"$PATH"
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript
export ub_setScriptChecksum_disable="true"
current_internal_CompressedScript_bytes='13358'
current_internal_CompressedScript_cksum='2644136777'
current_internal_CompressedScript='
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
AAAAAARZWg=='
current_internal_compressedScript_headerFunctions='
/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4CsHA1pdAC+ciKYksL89qRi90TdMvSwSEM6J8ipM2rR/Iqc/oYbShD5P+hKgz3ONSu7BhrUf8OSN4oZ8BL1e7m0JQ33pEQs007VTHA7nLczyIuWiilZSo+0zB132
DrV189uAlZ6oqD3MK7bjrSmuGreEaBOC+z5QkGUPIDVaXfJmDg73/A1Y9JqRKxtli7ZDurfX2t/Z3m6RV6ku3LwPHl2qt8/kbWEubRkY3Fl2VTTFWjQ8Z9qfpBK4YyV7fw3X3hcUmN6Fz+u2P8eCSl/fCnNX
HtvGeiwoJbZ3wje2iPvqVhHoy0BMVkEDcSqWo+znkV0BwqE45qLsZQ9IGG1CzglgciwcOU2fdsqKBFC5XA3WYFGg6uZ2q4mvn5jWR+FbeUz7YjupLAvLl7DE+daOBWzzyYeFrcMhDk1QeqOKpv41V0GTTqAm
Z7lRbPrhk3oRY/kBiQGZSfRuxTSmIc1zevrFy6JWcZkCJayU/wQ+XEKdvF51XHH+OYrSuhIxvk6G+Ce0sbTr3GBfVRQYdRpxeOs48xNaEfmBf6GZcWUMx5L3LA4cup19vL4O75JjKbnlJeYdoRCjtcPE7A8S
82KbKVXWm5n1ADflKsnTX3CVTSu7uS4pVXHlludUnC/0dCPIaO2WxpZTXETnBW0SD0f3HTs7UDEzwk7eMHnoe3xk/cdsh16yyG0jPOBLHEqULsotf/cimpgvkZlFxPNFKvrB2sVBDpjr393u8l5sSqQ9L5Vr
QgGi6nBnxhDESgC1fQ6p4D6w2joYaBQzVX0ShFGEK+bvZ6VjUbYJlLF4gx2eezXDlEClVs6t/VpATWVe263gsdVgRirp4aPGEtCnMOl6oAU3laA3KDdlQbcC906c44adhj8dQ6w5GG1zEy5jv73Q/CBnpuh4
6Q2uqurIYFG/4bzAesrLfJaMbHC5QEx2yRFLlLaXzwYBqGzW1kQN1LZUOdFDF746w4C4eMXwHmuiAdpwV2muM75Gv4UeLCX8pXZlUOuUnruNLaDG9Tq1m+cWA1lXHyWJ4wB4kyv4KtgYXHsQL1t6bC8gD9ly
TvtNA8FiEDaU4PeofKVcYpu+2JSbjM6pr/bbQKOmEr2szDpnOSz/0dZivx9HodtgWaii7I0ZRCSi9eNbuNfa+H7BpKNBHwAAADfa2eLaotFaAAH2BohWAACvFwLPscRn+wIAAAAABFla'
! echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d > /dev/null && exit 1
	source <(echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d)
export importScriptLocation=$(_getScriptAbsoluteLocation)
export importScriptFolder=$(_getScriptAbsoluteFolder)
! type readlink > /dev/null 2>&1 && exit 1;
! type dirname > /dev/null 2>&1 && exit 1;
! type basename > /dev/null 2>&1 && exit 1;
! readlink -f . > /dev/null 2>&1 && exit 1;
[[ "$1" == "--profile" ]] && ( [[ rotten == "rotten"* ]] || [[ rotten == "rotten" ]] ) && export ub_import="true" && export importScriptLocation="$profileScriptLocation" && export importScriptFolder="$profileScriptFolder"
[[ "$importScriptLocation" == "" ]] && exit 1
[[ "$importScriptFolder" == "" ]] && exit 1
! _getAbsolute_criticalDep && exit 1
! _compressed_criticalDep && exit 1
! echo "$current_internal_CompressedScript" | base64 -d | xz -d > /dev/null && exit 1
if [[ "$1" == "--embed" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
elif [[ "$1" == "--profile" ]] || [[ "$1" == "--parent" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
else
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) --compressed "$@"
	ub_import=
	ub_import_param=
	ub_import_script=
	ub_loginshell=
fi
if [[ "$ub_import" == "true" ]] && ! ( [[ "$ub_import_param" == "--bypass" ]] ) || [[ "$ub_import_param" == "--compressed" ]] || [[ "$ub_import_param" == "--parent" ]] || [[ "$ub_import_param" == "--profile" ]]
then
	if [[ "$ubiquitousBashID" != "" ]] || [[ -e "$HOME"/.ubcore ]] || ( [[ rotten != "rotten"* ]] || [[ rotten != "rotten" ]] )
	then
		return 0 > /dev/null 2>&1
		exit 0
	fi
fi
unset current_internal_CompressedScript ; unset current_internal_CompressedScript_cksum ; unset current_internal_CompressedScript_bytes
export ub_setScriptChecksum_disable=
unset ub_setScriptChecksum_disable
true
# https://github.com/mirage335/ubiquitous_bash
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript






#####Entry
# ###
























_test_prog() {
	true
}
_main() {
	#_start
	_start scriptLocal_mkdir_disable
	
	_collect
	
	_enter "$@"
	
	_stop
}
if [[ "$1" == '_test' ]]
then
	current_deleteScriptLocal="false"
	[[ ! -e "$scriptLocal" ]] && current_deleteScriptLocal="true"
	_stop_prog() {
		[[ "$current_deleteScriptLocal" == "true" ]] && rmdir "$scriptLocal" > /dev/null 2>&1
	}
fi
if [[ "$1" == '_'* ]] && type "$1" > /dev/null 2>&1
then
	"$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
fi
if [[ "$1" != '_'* ]]
then
	_main "$@"
fi

