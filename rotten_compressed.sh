#!/usr/bin/env bash
[[ "$PATH" != *"/usr/local/bin"* ]] && [[ -e "/usr/local/bin" ]] && export PATH=/usr/local/bin:"$PATH"
[[ "$PATH" != *"/usr/bin"* ]] && [[ -e "/usr/bin" ]] && export PATH=/usr/bin:"$PATH"
[[ "$PATH" != *"/bin:"* ]] && [[ -e "/bin" ]] && export PATH=/bin:"$PATH"
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript
export ub_setScriptChecksum_disable="true"
current_internal_CompressedScript_bytes='14106'
current_internal_CompressedScript_cksum='3478975385'
current_internal_CompressedScript='
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'
current_internal_compressedScript_headerFunctions='
/Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4CsHA1pdAC+ciKYksL89qRi90TdMvSwSEM6J8ipM2rR/Iqc/oYbShD5P+hKgz3ONSu7BhrUf8OSN4oZ8BL1e7m0JQ33pEQs007VTHA7nLczyIuWiilZSo+0zB132
DrV189uAlZ6oqD3MK7bjrSmuGreEaBOC+z5QkGUPIDVaXfJmDg73/A1Y9JqRKxtli7ZDurfX2t/Z3m6RV6ku3LwPHl2qt8/kbWEubRkY3Fl2VTTFWjQ8Z9qfpBK4YyV7fw3X3hcUmN6Fz+u2P8eCSl/fCnNX
HtvGeiwoJbZ3wje2iPvqVhHoy0BMVkEDcSqWo+znkV0BwqE45qLsZQ9IGG1CzglgciwcOU2fdsqKBFC5XA3WYFGg6uZ2q4mvn5jWR+FbeUz7YjupLAvLl7DE+daOBWzzyYeFrcMhDk1QeqOKpv41V0GTTqAm
Z7lRbPrhk3oRY/kBiQGZSfRuxTSmIc1zevrFy6JWcZkCJayU/wQ+XEKdvF51XHH+OYrSuhIxvk6G+Ce0sbTr3GBfVRQYdRpxeOs48xNaEfmBf6GZcWUMx5L3LA4cup19vL4O75JjKbnlJeYdoRCjtcPE7A8S
82KbKVXWm5n1ADflKsnTX3CVTSu7uS4pVXHlludUnC/0dCPIaO2WxpZTXETnBW0SD0f3HTs7UDEzwk7eMHnoe3xk/cdsh16yyG0jPOBLHEqULsotf/cimpgvkZlFxPNFKvrB2sVBDpjr393u8l5sSqQ9L5Vr
QgGi6nBnxhDESgC1fQ6p4D6w2joYaBQzVX0ShFGEK+bvZ6VjUbYJlLF4gx2eezXDlEClVs6t/VpATWVe263gsdVgRirp4aPGEtCnMOl6oAU3laA3KDdlQbcC906c44adhj8dQ6w5GG1zEy5jv73Q/CBnpuh4
6Q2uqurIYFG/4bzAesrLfJaMbHC5QEx2yRFLlLaXzwYBqGzW1kQN1LZUOdFDF746w4C4eMXwHmuiAdpwV2muM75Gv4UeLCX8pXZlUOuUnruNLaDG9Tq1m+cWA1lXHyWJ4wB4kyv4KtgYXHsQL1t6bC8gD9ly
TvtNA8FiEDaU4PeofKVcYpu+2JSbjM6pr/bbQKOmEr2szDpnOSz/0dZivx9HodtgWaii7I0ZRCSi9eNbuNfa+H7BpKNBHwAAADfa2eLaotFaAAH2BohWAACvFwLPscRn+wIAAAAABFla'
! echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d > /dev/null && exit 1
	source <(echo "$current_internal_compressedScript_headerFunctions" | base64 -d | xz -d)
export importScriptLocation=$(_getScriptAbsoluteLocation)
export importScriptFolder=$(_getScriptAbsoluteFolder)
! type readlink > /dev/null 2>&1 && exit 1;
! type dirname > /dev/null 2>&1 && exit 1;
! type basename > /dev/null 2>&1 && exit 1;
! readlink -f . > /dev/null 2>&1 && exit 1;
[[ "$1" == "--profile" ]] && ( [[ rotten == "rotten"* ]] || [[ rotten == "rotten" ]] ) && export ub_import="true" && export importScriptLocation="$profileScriptLocation" && export importScriptFolder="$profileScriptFolder"
[[ "$importScriptLocation" == "" ]] && exit 1
[[ "$importScriptFolder" == "" ]] && exit 1
! _getAbsolute_criticalDep && exit 1
! _compressed_criticalDep && exit 1
! echo "$current_internal_CompressedScript" | base64 -d | xz -d > /dev/null && exit 1
if [[ "$1" == "--embed" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
elif [[ "$1" == "--profile" ]] || [[ "$1" == "--parent" ]]
then
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) "$@"
else
	source <(echo "$current_internal_CompressedScript" | base64 -d | xz -d) --compressed "$@"
	ub_import=
	ub_import_param=
	ub_import_script=
	ub_loginshell=
fi
if [[ "$ub_import" == "true" ]] && ! ( [[ "$ub_import_param" == "--bypass" ]] ) || [[ "$ub_import_param" == "--compressed" ]] || [[ "$ub_import_param" == "--parent" ]] || [[ "$ub_import_param" == "--profile" ]]
then
	if [[ "$ubiquitousBashID" != "" ]] || [[ -e "$HOME"/.ubcore ]] || ( [[ rotten != "rotten"* ]] || [[ rotten != "rotten" ]] )
	then
		return 0 > /dev/null 2>&1
		exit 0
	fi
fi
unset current_internal_CompressedScript ; unset current_internal_CompressedScript_cksum ; unset current_internal_CompressedScript_bytes
export ub_setScriptChecksum_disable=
unset ub_setScriptChecksum_disable
true
# https://github.com/mirage335/ubiquitous_bash
#_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript_uk4uPhB663kVcygT0q_compressedScript






#####Entry
# ###
























_test_prog() {
	true
}
_main() {
	#_start
	_start scriptLocal_mkdir_disable
	
	_collect
	
	_enter "$@"
	
	_stop
}
if [[ "$1" == '_test' ]]
then
	current_deleteScriptLocal="false"
	[[ ! -e "$scriptLocal" ]] && current_deleteScriptLocal="true"
	_stop_prog() {
		[[ "$current_deleteScriptLocal" == "true" ]] && rmdir "$scriptLocal" > /dev/null 2>&1
	}
fi
if [[ "$1" == '_'* ]] && type "$1" > /dev/null 2>&1
then
	"$@"
	internalFunctionExitStatus="$?"
	return "$internalFunctionExitStatus" > /dev/null 2>&1
	exit "$internalFunctionExitStatus"
fi
if [[ "$1" != '_'* ]]
then
	_main "$@"
fi

